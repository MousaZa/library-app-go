// Code generated by protoc-gen-go. DO NOT EDIT.
// source: likes.proto

package likes

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// like Model
type Like struct {
	Id                   int64    `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	BookId               int64    `protobuf:"varint,2,opt,name=BookId,proto3" json:"BookId,omitempty"`
	UserId               int64    `protobuf:"varint,3,opt,name=UserId,proto3" json:"UserId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Like) Reset()         { *m = Like{} }
func (m *Like) String() string { return proto.CompactTextString(m) }
func (*Like) ProtoMessage()    {}
func (*Like) Descriptor() ([]byte, []int) {
	return fileDescriptor_cff81f36f81c8d8e, []int{0}
}

func (m *Like) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Like.Unmarshal(m, b)
}
func (m *Like) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Like.Marshal(b, m, deterministic)
}
func (m *Like) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Like.Merge(m, src)
}
func (m *Like) XXX_Size() int {
	return xxx_messageInfo_Like.Size(m)
}
func (m *Like) XXX_DiscardUnknown() {
	xxx_messageInfo_Like.DiscardUnknown(m)
}

var xxx_messageInfo_Like proto.InternalMessageInfo

func (m *Like) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Like) GetBookId() int64 {
	if m != nil {
		return m.BookId
	}
	return 0
}

func (m *Like) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

type LikeRequest struct {
	BookId               int64    `protobuf:"varint,1,opt,name=BookId,proto3" json:"BookId,omitempty"`
	UserId               int64    `protobuf:"varint,2,opt,name=UserId,proto3" json:"UserId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LikeRequest) Reset()         { *m = LikeRequest{} }
func (m *LikeRequest) String() string { return proto.CompactTextString(m) }
func (*LikeRequest) ProtoMessage()    {}
func (*LikeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cff81f36f81c8d8e, []int{1}
}

func (m *LikeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LikeRequest.Unmarshal(m, b)
}
func (m *LikeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LikeRequest.Marshal(b, m, deterministic)
}
func (m *LikeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LikeRequest.Merge(m, src)
}
func (m *LikeRequest) XXX_Size() int {
	return xxx_messageInfo_LikeRequest.Size(m)
}
func (m *LikeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LikeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LikeRequest proto.InternalMessageInfo

func (m *LikeRequest) GetBookId() int64 {
	if m != nil {
		return m.BookId
	}
	return 0
}

func (m *LikeRequest) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

type BoolResponse struct {
	Response             bool     `protobuf:"varint,1,opt,name=Response,proto3" json:"Response,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BoolResponse) Reset()         { *m = BoolResponse{} }
func (m *BoolResponse) String() string { return proto.CompactTextString(m) }
func (*BoolResponse) ProtoMessage()    {}
func (*BoolResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_cff81f36f81c8d8e, []int{2}
}

func (m *BoolResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BoolResponse.Unmarshal(m, b)
}
func (m *BoolResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BoolResponse.Marshal(b, m, deterministic)
}
func (m *BoolResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BoolResponse.Merge(m, src)
}
func (m *BoolResponse) XXX_Size() int {
	return xxx_messageInfo_BoolResponse.Size(m)
}
func (m *BoolResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_BoolResponse.DiscardUnknown(m)
}

var xxx_messageInfo_BoolResponse proto.InternalMessageInfo

func (m *BoolResponse) GetResponse() bool {
	if m != nil {
		return m.Response
	}
	return false
}

func init() {
	proto.RegisterType((*Like)(nil), "Like")
	proto.RegisterType((*LikeRequest)(nil), "LikeRequest")
	proto.RegisterType((*BoolResponse)(nil), "BoolResponse")
}

func init() {
	proto.RegisterFile("likes.proto", fileDescriptor_cff81f36f81c8d8e)
}

var fileDescriptor_cff81f36f81c8d8e = []byte{
	// 190 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0xce, 0xc9, 0xcc, 0x4e,
	0x2d, 0xd6, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x57, 0x72, 0xe3, 0x62, 0xf1, 0xc9, 0xcc, 0x4e, 0x15,
	0xe2, 0xe3, 0x62, 0xf2, 0x4c, 0x91, 0x60, 0x54, 0x60, 0xd4, 0x60, 0x0e, 0x62, 0xf2, 0x4c, 0x11,
	0x12, 0xe3, 0x62, 0x73, 0xca, 0xcf, 0xcf, 0xf6, 0x4c, 0x91, 0x60, 0x02, 0x8b, 0x41, 0x79, 0x20,
	0xf1, 0xd0, 0xe2, 0xd4, 0x22, 0xcf, 0x14, 0x09, 0x66, 0x88, 0x38, 0x84, 0xa7, 0x64, 0xcb, 0xc5,
	0x0d, 0x32, 0x27, 0x28, 0xb5, 0xb0, 0x34, 0xb5, 0xb8, 0x04, 0x49, 0x3b, 0x23, 0x0e, 0xed, 0x4c,
	0x28, 0xda, 0xb5, 0xb8, 0x78, 0x9c, 0xf2, 0xf3, 0x73, 0x82, 0x52, 0x8b, 0x0b, 0xf2, 0xf3, 0x8a,
	0x53, 0x85, 0xa4, 0xb8, 0x38, 0x60, 0x6c, 0xb0, 0x09, 0x1c, 0x41, 0x70, 0xbe, 0x51, 0x13, 0x23,
	0x17, 0x2b, 0xc8, 0xae, 0x62, 0x21, 0x35, 0x2e, 0x76, 0xc7, 0x94, 0x14, 0xb0, 0xfb, 0x79, 0xf4,
	0x90, 0xac, 0x97, 0xe2, 0xd5, 0x43, 0x31, 0x4d, 0x93, 0x8b, 0xcb, 0x25, 0x35, 0x27, 0xb5, 0x24,
	0x95, 0xb0, 0x52, 0x35, 0x2e, 0x76, 0xf7, 0xd4, 0x12, 0x82, 0xea, 0x92, 0xd8, 0xc0, 0xc1, 0x67,
	0x0c, 0x08, 0x00, 0x00, 0xff, 0xff, 0xc3, 0xb8, 0x4f, 0xa4, 0x4d, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// LikesClient is the client API for Likes service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type LikesClient interface {
	AddLike(ctx context.Context, in *LikeRequest, opts ...grpc.CallOption) (*BoolResponse, error)
	DeleteLike(ctx context.Context, in *LikeRequest, opts ...grpc.CallOption) (*BoolResponse, error)
	GetLike(ctx context.Context, in *LikeRequest, opts ...grpc.CallOption) (*BoolResponse, error)
}

type likesClient struct {
	cc grpc.ClientConnInterface
}

func NewLikesClient(cc grpc.ClientConnInterface) LikesClient {
	return &likesClient{cc}
}

func (c *likesClient) AddLike(ctx context.Context, in *LikeRequest, opts ...grpc.CallOption) (*BoolResponse, error) {
	out := new(BoolResponse)
	err := c.cc.Invoke(ctx, "/Likes/AddLike", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *likesClient) DeleteLike(ctx context.Context, in *LikeRequest, opts ...grpc.CallOption) (*BoolResponse, error) {
	out := new(BoolResponse)
	err := c.cc.Invoke(ctx, "/Likes/DeleteLike", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *likesClient) GetLike(ctx context.Context, in *LikeRequest, opts ...grpc.CallOption) (*BoolResponse, error) {
	out := new(BoolResponse)
	err := c.cc.Invoke(ctx, "/Likes/GetLike", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// LikesServer is the server API for Likes service.
type LikesServer interface {
	AddLike(context.Context, *LikeRequest) (*BoolResponse, error)
	DeleteLike(context.Context, *LikeRequest) (*BoolResponse, error)
	GetLike(context.Context, *LikeRequest) (*BoolResponse, error)
}

// UnimplementedLikesServer can be embedded to have forward compatible implementations.
type UnimplementedLikesServer struct {
}

func (*UnimplementedLikesServer) AddLike(ctx context.Context, req *LikeRequest) (*BoolResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddLike not implemented")
}
func (*UnimplementedLikesServer) DeleteLike(ctx context.Context, req *LikeRequest) (*BoolResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteLike not implemented")
}
func (*UnimplementedLikesServer) GetLike(ctx context.Context, req *LikeRequest) (*BoolResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetLike not implemented")
}

func RegisterLikesServer(s *grpc.Server, srv LikesServer) {
	s.RegisterService(&_Likes_serviceDesc, srv)
}

func _Likes_AddLike_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LikeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LikesServer).AddLike(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Likes/AddLike",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LikesServer).AddLike(ctx, req.(*LikeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Likes_DeleteLike_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LikeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LikesServer).DeleteLike(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Likes/DeleteLike",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LikesServer).DeleteLike(ctx, req.(*LikeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Likes_GetLike_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LikeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LikesServer).GetLike(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Likes/GetLike",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LikesServer).GetLike(ctx, req.(*LikeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Likes_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Likes",
	HandlerType: (*LikesServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AddLike",
			Handler:    _Likes_AddLike_Handler,
		},
		{
			MethodName: "DeleteLike",
			Handler:    _Likes_DeleteLike_Handler,
		},
		{
			MethodName: "GetLike",
			Handler:    _Likes_GetLike_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "likes.proto",
}
