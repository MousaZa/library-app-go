// Code generated by protoc-gen-go. DO NOT EDIT.
// source: notifications.proto

package library

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Notification struct {
	Id                   int64    `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	UserId               int64    `protobuf:"varint,2,opt,name=UserId,proto3" json:"UserId,omitempty"`
	Message              string   `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Type                 string   `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	Status               string   `protobuf:"bytes,5,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Notification) Reset()         { *m = Notification{} }
func (m *Notification) String() string { return proto.CompactTextString(m) }
func (*Notification) ProtoMessage()    {}
func (*Notification) Descriptor() ([]byte, []int) {
	return fileDescriptor_fbc3de4cce73c76f, []int{0}
}

func (m *Notification) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Notification.Unmarshal(m, b)
}
func (m *Notification) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Notification.Marshal(b, m, deterministic)
}
func (m *Notification) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Notification.Merge(m, src)
}
func (m *Notification) XXX_Size() int {
	return xxx_messageInfo_Notification.Size(m)
}
func (m *Notification) XXX_DiscardUnknown() {
	xxx_messageInfo_Notification.DiscardUnknown(m)
}

var xxx_messageInfo_Notification proto.InternalMessageInfo

func (m *Notification) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Notification) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *Notification) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *Notification) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Notification) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

type GetUserNotificationsRequest struct {
	UserId               int64    `protobuf:"varint,1,opt,name=UserId,proto3" json:"UserId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetUserNotificationsRequest) Reset()         { *m = GetUserNotificationsRequest{} }
func (m *GetUserNotificationsRequest) String() string { return proto.CompactTextString(m) }
func (*GetUserNotificationsRequest) ProtoMessage()    {}
func (*GetUserNotificationsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_fbc3de4cce73c76f, []int{1}
}

func (m *GetUserNotificationsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetUserNotificationsRequest.Unmarshal(m, b)
}
func (m *GetUserNotificationsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetUserNotificationsRequest.Marshal(b, m, deterministic)
}
func (m *GetUserNotificationsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetUserNotificationsRequest.Merge(m, src)
}
func (m *GetUserNotificationsRequest) XXX_Size() int {
	return xxx_messageInfo_GetUserNotificationsRequest.Size(m)
}
func (m *GetUserNotificationsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetUserNotificationsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetUserNotificationsRequest proto.InternalMessageInfo

func (m *GetUserNotificationsRequest) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

type GetUserNotificationsResponse struct {
	Notifications        []*Notification `protobuf:"bytes,1,rep,name=notifications,proto3" json:"notifications,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *GetUserNotificationsResponse) Reset()         { *m = GetUserNotificationsResponse{} }
func (m *GetUserNotificationsResponse) String() string { return proto.CompactTextString(m) }
func (*GetUserNotificationsResponse) ProtoMessage()    {}
func (*GetUserNotificationsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_fbc3de4cce73c76f, []int{2}
}

func (m *GetUserNotificationsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetUserNotificationsResponse.Unmarshal(m, b)
}
func (m *GetUserNotificationsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetUserNotificationsResponse.Marshal(b, m, deterministic)
}
func (m *GetUserNotificationsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetUserNotificationsResponse.Merge(m, src)
}
func (m *GetUserNotificationsResponse) XXX_Size() int {
	return xxx_messageInfo_GetUserNotificationsResponse.Size(m)
}
func (m *GetUserNotificationsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetUserNotificationsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetUserNotificationsResponse proto.InternalMessageInfo

func (m *GetUserNotificationsResponse) GetNotifications() []*Notification {
	if m != nil {
		return m.Notifications
	}
	return nil
}

type PushNotificationRequest struct {
	UserId               int64    `protobuf:"varint,1,opt,name=UserId,proto3" json:"UserId,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Type                 string   `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PushNotificationRequest) Reset()         { *m = PushNotificationRequest{} }
func (m *PushNotificationRequest) String() string { return proto.CompactTextString(m) }
func (*PushNotificationRequest) ProtoMessage()    {}
func (*PushNotificationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_fbc3de4cce73c76f, []int{3}
}

func (m *PushNotificationRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PushNotificationRequest.Unmarshal(m, b)
}
func (m *PushNotificationRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PushNotificationRequest.Marshal(b, m, deterministic)
}
func (m *PushNotificationRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PushNotificationRequest.Merge(m, src)
}
func (m *PushNotificationRequest) XXX_Size() int {
	return xxx_messageInfo_PushNotificationRequest.Size(m)
}
func (m *PushNotificationRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PushNotificationRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PushNotificationRequest proto.InternalMessageInfo

func (m *PushNotificationRequest) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *PushNotificationRequest) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *PushNotificationRequest) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

type MarkNotificationAsReadRequest struct {
	NotificationId       int64    `protobuf:"varint,2,opt,name=NotificationId,proto3" json:"NotificationId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MarkNotificationAsReadRequest) Reset()         { *m = MarkNotificationAsReadRequest{} }
func (m *MarkNotificationAsReadRequest) String() string { return proto.CompactTextString(m) }
func (*MarkNotificationAsReadRequest) ProtoMessage()    {}
func (*MarkNotificationAsReadRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_fbc3de4cce73c76f, []int{4}
}

func (m *MarkNotificationAsReadRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MarkNotificationAsReadRequest.Unmarshal(m, b)
}
func (m *MarkNotificationAsReadRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MarkNotificationAsReadRequest.Marshal(b, m, deterministic)
}
func (m *MarkNotificationAsReadRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MarkNotificationAsReadRequest.Merge(m, src)
}
func (m *MarkNotificationAsReadRequest) XXX_Size() int {
	return xxx_messageInfo_MarkNotificationAsReadRequest.Size(m)
}
func (m *MarkNotificationAsReadRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MarkNotificationAsReadRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MarkNotificationAsReadRequest proto.InternalMessageInfo

func (m *MarkNotificationAsReadRequest) GetNotificationId() int64 {
	if m != nil {
		return m.NotificationId
	}
	return 0
}

type NMessageResponse struct {
	Message              string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NMessageResponse) Reset()         { *m = NMessageResponse{} }
func (m *NMessageResponse) String() string { return proto.CompactTextString(m) }
func (*NMessageResponse) ProtoMessage()    {}
func (*NMessageResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_fbc3de4cce73c76f, []int{5}
}

func (m *NMessageResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NMessageResponse.Unmarshal(m, b)
}
func (m *NMessageResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NMessageResponse.Marshal(b, m, deterministic)
}
func (m *NMessageResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NMessageResponse.Merge(m, src)
}
func (m *NMessageResponse) XXX_Size() int {
	return xxx_messageInfo_NMessageResponse.Size(m)
}
func (m *NMessageResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_NMessageResponse.DiscardUnknown(m)
}

var xxx_messageInfo_NMessageResponse proto.InternalMessageInfo

func (m *NMessageResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto.RegisterType((*Notification)(nil), "library.Notification")
	proto.RegisterType((*GetUserNotificationsRequest)(nil), "library.GetUserNotificationsRequest")
	proto.RegisterType((*GetUserNotificationsResponse)(nil), "library.GetUserNotificationsResponse")
	proto.RegisterType((*PushNotificationRequest)(nil), "library.PushNotificationRequest")
	proto.RegisterType((*MarkNotificationAsReadRequest)(nil), "library.MarkNotificationAsReadRequest")
	proto.RegisterType((*NMessageResponse)(nil), "library.NMessageResponse")
}

func init() {
	proto.RegisterFile("notifications.proto", fileDescriptor_fbc3de4cce73c76f)
}

var fileDescriptor_fbc3de4cce73c76f = []byte{
	// 329 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x93, 0xc1, 0x4e, 0x83, 0x40,
	0x10, 0x86, 0xb3, 0x50, 0xdb, 0x38, 0xda, 0xa6, 0x59, 0xb5, 0xae, 0x55, 0x13, 0xb2, 0xd1, 0x86,
	0x83, 0xe1, 0x50, 0xe3, 0xc9, 0x93, 0xa7, 0x86, 0x43, 0xab, 0x21, 0xf1, 0xd4, 0x83, 0xd9, 0x96,
	0x55, 0x89, 0x0a, 0xc8, 0x2c, 0x87, 0x26, 0x3e, 0x8d, 0x4f, 0x6a, 0x8a, 0x94, 0x2e, 0x04, 0xf1,
	0xc6, 0xcc, 0xce, 0xcc, 0x3f, 0xff, 0x37, 0x01, 0x0e, 0xc2, 0x48, 0x05, 0xcf, 0xc1, 0x52, 0xa8,
	0x20, 0x0a, 0xd1, 0x89, 0x93, 0x48, 0x45, 0xb4, 0xf3, 0x1e, 0x2c, 0x12, 0x91, 0xac, 0xf8, 0x17,
	0xec, 0xcf, 0xb4, 0x77, 0xda, 0x03, 0xc3, 0xf5, 0x19, 0xb1, 0x88, 0x6d, 0x7a, 0x86, 0xeb, 0xd3,
	0x01, 0xb4, 0x1f, 0x51, 0x26, 0xae, 0xcf, 0x8c, 0x2c, 0x97, 0x47, 0x94, 0x41, 0xe7, 0x43, 0x22,
	0x8a, 0x17, 0xc9, 0x4c, 0x8b, 0xd8, 0xbb, 0xde, 0x26, 0xa4, 0x14, 0x5a, 0x6a, 0x15, 0x4b, 0xd6,
	0xca, 0xd2, 0xd9, 0xf7, 0x7a, 0x0a, 0x2a, 0xa1, 0x52, 0x64, 0x3b, 0x59, 0x36, 0x8f, 0xf8, 0x0d,
	0x9c, 0x4e, 0xa4, 0x5a, 0x8f, 0xd4, 0x97, 0x40, 0x4f, 0x7e, 0xa6, 0x12, 0x95, 0x26, 0x4e, 0x74,
	0x71, 0x3e, 0x87, 0xb3, 0xfa, 0x36, 0x8c, 0xa3, 0x10, 0x25, 0xbd, 0x85, 0x6e, 0xc9, 0x34, 0x23,
	0x96, 0x69, 0xef, 0x8d, 0x8f, 0x9c, 0xdc, 0xb5, 0xa3, 0xb7, 0x79, 0xe5, 0x5a, 0xfe, 0x04, 0xc7,
	0x0f, 0x29, 0xbe, 0x96, 0x4a, 0x9a, 0xf7, 0xd1, 0x61, 0x18, 0xf5, 0x30, 0xcc, 0x2d, 0x0c, 0x3e,
	0x81, 0xf3, 0xa9, 0x48, 0xde, 0x74, 0x81, 0x3b, 0xf4, 0xa4, 0xf0, 0x37, 0x32, 0x23, 0xe8, 0xe9,
	0x8f, 0x05, 0xfb, 0x4a, 0x96, 0x5f, 0x41, 0x7f, 0x36, 0xfd, 0x15, 0x2a, 0xac, 0x6b, 0xab, 0x90,
	0xd2, 0x2a, 0xe3, 0x6f, 0x03, 0xba, 0x25, 0x5c, 0xf4, 0x1e, 0xfa, 0x71, 0xc5, 0x29, 0xb5, 0x0a,
	0x46, 0x7f, 0x40, 0x18, 0x9e, 0x6c, 0x29, 0x56, 0xc5, 0x97, 0x70, 0x58, 0x77, 0x17, 0x7a, 0x51,
	0xb4, 0x34, 0x5c, 0x7b, 0x78, 0xf9, 0x4f, 0x55, 0x2e, 0x32, 0x87, 0x41, 0x3d, 0x3e, 0x3a, 0x2a,
	0x06, 0x34, 0xf2, 0x6d, 0x70, 0xb0, 0x68, 0x67, 0xbf, 0xc7, 0xf5, 0x4f, 0x00, 0x00, 0x00, 0xff,
	0xff, 0x8c, 0x3e, 0xf6, 0xb2, 0x35, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// NotificationsClient is the client API for Notifications service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type NotificationsClient interface {
	// ADD
	PushNotification(ctx context.Context, in *PushNotificationRequest, opts ...grpc.CallOption) (*NMessageResponse, error)
	// GET
	GetUserNotifications(ctx context.Context, in *GetUserNotificationsRequest, opts ...grpc.CallOption) (*GetUserNotificationsResponse, error)
	// UPDATE
	MarkNotificationAsRead(ctx context.Context, in *MarkNotificationAsReadRequest, opts ...grpc.CallOption) (*NMessageResponse, error)
}

type notificationsClient struct {
	cc grpc.ClientConnInterface
}

func NewNotificationsClient(cc grpc.ClientConnInterface) NotificationsClient {
	return &notificationsClient{cc}
}

func (c *notificationsClient) PushNotification(ctx context.Context, in *PushNotificationRequest, opts ...grpc.CallOption) (*NMessageResponse, error) {
	out := new(NMessageResponse)
	err := c.cc.Invoke(ctx, "/library.Notifications/pushNotification", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *notificationsClient) GetUserNotifications(ctx context.Context, in *GetUserNotificationsRequest, opts ...grpc.CallOption) (*GetUserNotificationsResponse, error) {
	out := new(GetUserNotificationsResponse)
	err := c.cc.Invoke(ctx, "/library.Notifications/GetUserNotifications", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *notificationsClient) MarkNotificationAsRead(ctx context.Context, in *MarkNotificationAsReadRequest, opts ...grpc.CallOption) (*NMessageResponse, error) {
	out := new(NMessageResponse)
	err := c.cc.Invoke(ctx, "/library.Notifications/MarkNotificationAsRead", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// NotificationsServer is the server API for Notifications service.
type NotificationsServer interface {
	// ADD
	PushNotification(context.Context, *PushNotificationRequest) (*NMessageResponse, error)
	// GET
	GetUserNotifications(context.Context, *GetUserNotificationsRequest) (*GetUserNotificationsResponse, error)
	// UPDATE
	MarkNotificationAsRead(context.Context, *MarkNotificationAsReadRequest) (*NMessageResponse, error)
}

// UnimplementedNotificationsServer can be embedded to have forward compatible implementations.
type UnimplementedNotificationsServer struct {
}

func (*UnimplementedNotificationsServer) PushNotification(ctx context.Context, req *PushNotificationRequest) (*NMessageResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PushNotification not implemented")
}
func (*UnimplementedNotificationsServer) GetUserNotifications(ctx context.Context, req *GetUserNotificationsRequest) (*GetUserNotificationsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUserNotifications not implemented")
}
func (*UnimplementedNotificationsServer) MarkNotificationAsRead(ctx context.Context, req *MarkNotificationAsReadRequest) (*NMessageResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MarkNotificationAsRead not implemented")
}

func RegisterNotificationsServer(s *grpc.Server, srv NotificationsServer) {
	s.RegisterService(&_Notifications_serviceDesc, srv)
}

func _Notifications_PushNotification_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PushNotificationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NotificationsServer).PushNotification(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/library.Notifications/PushNotification",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NotificationsServer).PushNotification(ctx, req.(*PushNotificationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Notifications_GetUserNotifications_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUserNotificationsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NotificationsServer).GetUserNotifications(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/library.Notifications/GetUserNotifications",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NotificationsServer).GetUserNotifications(ctx, req.(*GetUserNotificationsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Notifications_MarkNotificationAsRead_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MarkNotificationAsReadRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NotificationsServer).MarkNotificationAsRead(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/library.Notifications/MarkNotificationAsRead",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NotificationsServer).MarkNotificationAsRead(ctx, req.(*MarkNotificationAsReadRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Notifications_serviceDesc = grpc.ServiceDesc{
	ServiceName: "library.Notifications",
	HandlerType: (*NotificationsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "pushNotification",
			Handler:    _Notifications_PushNotification_Handler,
		},
		{
			MethodName: "GetUserNotifications",
			Handler:    _Notifications_GetUserNotifications_Handler,
		},
		{
			MethodName: "MarkNotificationAsRead",
			Handler:    _Notifications_MarkNotificationAsRead_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "notifications.proto",
}
