swagger: "2.0"
info:
  title: Images API
  description: API for uploading and retrieving image files.
  version: "1.0.0"
host: localhost:8080
basePath: /
schemes:
  - http
consumes:
  - application/json
  - multipart/form-data
  - image/png
  - image/jpeg
  - image/jpg
produces:
  - application/json
  - image/png
  - image/jpeg
  - image/jpg
paths:
  /images/covers/{id}:
    post:
      summary: Upload a book cover
      description: Uploads a book cover image for a specific book ID.
      tags:
        - books
      parameters:
        - name: id
          in: path
          required: true
          type: string
          description: Book ID
        - name: upload
          in: formData
          required: true
          type: file
          description: Book cover image file
      responses:
        200:
          description: Successful upload
          schema:
            type: object
            additionalProperties: true
        400:
          description: Invalid file type
          schema:
            type: string
        500:
          description: Server error
          schema:
            type: object
    get:
      summary: Get a book cover
      description: Retrieves a book cover image for a specific book ID.
      tags:
        - books
      parameters:
        - name: id
          in: path
          required: true
          type: string
          description: Book ID
      responses:
        200:
          description: Book cover image retrieved successfully
          schema:
            type: file
        404:
          description: File not found
          schema:
            type: string

  /images/avatars/{id}:
    post:
      summary: Upload a user avatar
      description: Uploads a user avatar image for a specific user ID.
      tags:
        - users
      parameters:
        - name: id
          in: path
          required: true
          type: string
          description: User ID
        - name: upload
          in: formData
          required: true
          type: file
          description: User avatar image file
      responses:
        201:
          description: Avatar uploaded successfully
          schema:
            $ref: '#/definitions/imagesNoContent'
        400:
          description: Invalid file type
          schema:
            $ref: '#/definitions/imagesNoContent'
        500:
          description: Server error
          schema:
            $ref: '#/definitions/imagesNoContent'
    get:
      summary: Get a user avatar
      description: Retrieves a user avatar image for a specific user ID.
      tags:
        - users
      parameters:
        - name: id
          in: path
          required: true
          type: string
          description: User ID
      responses:
        200:
          description: User avatar image retrieved successfully
          schema:
            type: file
        404:
          description: File not found
          schema:
            $ref: '#/definitions/imagesNoContent'

definitions:
  imagesNoContent:
    description: Response for no content scenarios.
    type: object
    additionalProperties: false
